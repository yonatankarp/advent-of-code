package com.yonatankarp.adventofcode.aoc<YEAR_PLACEHOLDER>.day<DAY_PLACEHOLDER>

import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Test
import com.yonatankarp.adventofcode.utils.resourceAsList
import org.junit.jupiter.api.Nested

class Day<DAY_PLACEHOLDER>Test {

    private val exampleInput = """""".trimIndent().split("\n")

    @Nested
    inner class Part1 {
        @Test
        fun `Part 1 - Example`() {
            val day<DAY_PLACEHOLDER> = Day<DAY_PLACEHOLDER>(exampleInput)
            assertEquals(0, day<DAY_PLACEHOLDER>.solvePart1())
        }

        @Test
        fun `Part 1 - Real Input`() {
            val day<DAY_PLACEHOLDER> = Day<DAY_PLACEHOLDER>(resourceAsList("<YEAR_PLACEHOLDER>/day<DAY_PLACEHOLDER>.txt"))
            assertEquals(0, day<DAY_PLACEHOLDER>.solvePart1())
        }
    }

    @Nested
    inner class Part2 {
        @Test
        fun `Part 2 - Example`() {
            val day<DAY_PLACEHOLDER> = Day<DAY_PLACEHOLDER>(exampleInput)
            assertEquals(0, day<DAY_PLACEHOLDER>.solvePart2())
        }

        @Test
        fun `Part 2 - Real Input`() {
            val day<DAY_PLACEHOLDER> = Day<DAY_PLACEHOLDER>(resourceAsList("<YEAR_PLACEHOLDER>/day<DAY_PLACEHOLDER>.txt"))
            assertEquals(0, day<DAY_PLACEHOLDER>.solvePart2())
        }
    }
}
